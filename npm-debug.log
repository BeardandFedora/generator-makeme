0 info it worked if it ends with ok
1 verbose cli [ '/home/ubuntu/.nvm/versions/node/v4.2.4/bin/node',
1 verbose cli   '/home/ubuntu/.nvm/versions/node/v4.2.4/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.5.2
3 info using node@v4.2.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/ubuntu/workspace/makeme',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/ubuntu/.npm/generator-makeme/3.2.8/package.tgz not in flight; packing
9 info lifecycle generator-makeme@3.2.8~prepublish: generator-makeme@3.2.8
10 silly lifecycle generator-makeme@3.2.8~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/ubuntu/.npm/generator-makeme/3.2.8/package.tgz',
11 verbose tar pack   '/home/ubuntu/workspace/makeme' ]
12 verbose tarball /home/ubuntu/.npm/generator-makeme/3.2.8/package.tgz
13 verbose folder /home/ubuntu/workspace/makeme
14 verbose addLocalTarball adding from inside cache /home/ubuntu/.npm/generator-makeme/3.2.8/package.tgz
15 silly cache afterAdd generator-makeme@3.2.8
16 verbose afterAdd /home/ubuntu/.npm/generator-makeme/3.2.8/package/package.json not in flight; writing
17 verbose afterAdd /home/ubuntu/.npm/generator-makeme/3.2.8/package/package.json written
18 silly publish { name: 'generator-makeme',
18 silly publish   version: '3.2.8',
18 silly publish   description: 'A Fullstack Universal Javascript Generator for #coolkids that uses Angular, Express, Node, Mongo, Socket + more',
18 silly publish   keywords:
18 silly publish    [ 'yeoman-generator',
18 silly publish      'mean',
18 silly publish      'mongodb',
18 silly publish      'angularjs',
18 silly publish      'express',
18 silly publish      'scaffold',
18 silly publish      'fullstack',
18 silly publish      'framework',
18 silly publish      'component',
18 silly publish      'front-end',
18 silly publish      'app' ],
18 silly publish   homepage: 'https://github.com/giftstarter/generator-makeme',
18 silly publish   bugs: { url: 'https://github.com/DaftMonk/generator-makeme/issues' },
18 silly publish   author: { name: 'Emotiv Labs', url: 'http://giftstarter.com/' },
18 silly publish   contributors:
18 silly publish    [ { name: 'Joel Serino',
18 silly publish        email: 'joel@giftstarter.com',
18 silly publish        url: 'http://giftstarter.com/' },
18 silly publish      { name: 'Tyler Henkel', url: 'http://tylerhenkel.com/' },
18 silly publish      { name: 'Andrew Koroluk',
18 silly publish        email: 'koroluka@gmail.com',
18 silly publish        url: 'http://andrewk.me/' },
18 silly publish      { name: 'Cody Mize',
18 silly publish        email: 'me@codymize.com',
18 silly publish        url: 'http://codymize.com/' },
18 silly publish      { name: 'Brian Ford',
18 silly publish        email: 'btford@umich.edu',
18 silly publish        url: 'http://briantford.com/' },
18 silly publish      { name: 'Pascal Hartig',
18 silly publish        email: 'passy@twitter.com',
18 silly publish        url: 'http://passy.me/' },
18 silly publish      { name: 'Eddie Monge', url: 'http://eddiemonge.com' },
18 silly publish      { name: 'Sindre Sorhus',
18 silly publish        email: 'sindresorhus@gmail.com',
18 silly publish        url: 'https://twitter.com/sindresorhus' } ],
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git://github.com/giftstarter/generator-makeme.git' },
18 silly publish   scripts: { test: 'grunt test' },
18 silly publish   dependencies:
18 silly publish    { 'babel-core': '^5.8.23',
18 silly publish      chalk: '^1.1.0',
18 silly publish      'generator-ng-component': '~0.1.1',
18 silly publish      glob: '^6.0.1',
18 silly publish      lodash: '^3.10.1',
18 silly publish      'underscore.string': '^3.1.1',
18 silly publish      'yeoman-generator': '~0.20.3',
18 silly publish      'yeoman-welcome': '^1.0.1' },
18 silly publish   devDependencies:
18 silly publish    { chai: '^3.2.0',
18 silly publish      grunt: '~0.4.1',
18 silly publish      'grunt-build-control': '^0.6.0',
18 silly publish      'grunt-contrib-clean': '^0.7.0',
18 silly publish      'grunt-contrib-jshint': '^0.11.2',
18 silly publish      'grunt-conventional-changelog': '^4.1.0',
18 silly publish      'grunt-david': '~0.7.0',
18 silly publish      'grunt-env': '^0.4.1',
18 silly publish      'grunt-mocha-test': '^0.12.7',
18 silly publish      'grunt-release': '^0.13.0',
18 silly publish      'jit-grunt': '^0.9.1',
18 silly publish      mocha: '^2.2.5',
18 silly publish      q: '^1.0.1',
18 silly publish      'recursive-readdir': '^1.2.0',
18 silly publish      shelljs: '^0.5.3',
18 silly publish      'yeoman-assert': '^2.0.0' },
18 silly publish   engines: { node: '^4.2.3', npm: '^2.14.7' },
18 silly publish   license: 'BSD-2-Clause',
18 silly publish   readme: '\n     _____  _    _          _   __               _   __                             __       _    \n    |_   _|/ |_ | |        / |_[  |             / |_[  |                           [  |     / |_  \n      | | `| |-\'\\_|.--.   `| |-\'| |--.  .---.  `| |-\'| |--.   .--.   __   _   .--./)| |--. `| |-\' \n      | |  | |    ( (`\\]   | |  | .-. |/ /__\\\\  | |  | .-. |/ .\'`\\ \\[  | | | / /\'`\\;| .-. | | |   \n     _| |_ | |,    `\'.\'.   | |, | | | || \\__.,  | |, | | | || \\__. | | \\_/ |,\\ \\._//| | | | | |,  \n    |_____|\\__/   [\\__) )  \\__/[___]|__]\'.__.\'  \\__/[___]|__]\'.__.\'  \'.__.\'_/.\',__`[___]|__]\\__/  \n      _   __              _                                      _          ( ( __))              \n     / |_[  |            / |_                                   / |_                              \n    `| |-\'| |--.   ,--. `| |-\'  .---.   .--.   __   _   _ .--. `| |-\'.--.                         \n     | |  | .-. | `\'_\\ : | |   / /\'`\\]/ .\'`\\ \\[  | | | [ `.-. | | | ( (`\\]                        \n     | |, | | | | // | |,| |,  | \\__. | \\__. | | \\_/ |, | | | | | |, `\'.\'.  _                     \n     \\__/[___]|__]\\\'-;__/\\__/  \'.___.\' \'.__.\'  \'.__.\'_/[___||__]\\__/[\\__) )(_)                    \n                                                                                              \n    ----------------------------------------------------------------- \n\n\n# `Makeme` - A Universal Javascript generator for #coolkids \n`Makeme` is a universal javascript stack generator for Yeoman - featuring Angular, Express, Node, Mongo and Socket. \n\n[ ![Codeship Status for giftstarter/generator-makeme](https://codeship.com/projects/434a9b80-90b9-0133-623b-4e0b09ec4af6/status?branch=master)](https://codeship.com/projects/124478)\n\n> Are you looking for [**`Makeme Famous`**](https://www.github.com/giftstarter/generator-makeme-famous)? \n\n## GyShiDo with `makeme`\nTo get shit done, here\'s a quick list of useful info. \n\n#### Table of Contents\n\n1. [Universal Javascript](#Welcome-to-Universal-Javascript) with Angular\n2. [Setting Up](#setting-up)\n3. [Supported Configurations](#supported-configurations)\n4. [Project Structure](#project-structure)\n5. [Typical workflows](#typical-workflows)\n6. [Gulp tasks](#gulp-tasks)\n7. [Bower components](#bower-components)\n8. → [Generators](./app/templates/docs/generators.md) docs \n9. → [Testing](./app/templates/docs/testing.md) docs\n10. → [Deployment](./app/templates/docs/deploy.md) docs\n11. [Changelog](#changelog)\n12. [Upgrade](#upgrade)\n\n<img src="http://yeoman.io/static/illustration-home-inverted.1f863f34ba.png" width="500px">\n\n---\n\n<img src="http://www.w3schools.com/angular/pic_angular.jpg" width="50px"><img src="https://supundharmarathne.files.wordpress.com/2013/08/nodejs.png" width="50px"><img src="http://www.codingpedia.org/wp-content/uploads/2014/04/gulp-2x.png" width="50px"><img src="https://wordimpress.com/assets/icon-grunt.png" width="50px"><img src="https://farm8.staticflickr.com/7255/7543242464_58d5d8ebae_z.jpg" width="50px"><img src="https://www.pubnub.com/blog/wp-content/uploads/2014/07/SOCKETIOICON.gif" width="50px"><img src="http://yeoman.io/static/yeoman-02.dc21b7fc1d.png" width="50px"><img src="http://chaijs.com/public/img/chai-logo.png" width="50px">\n\n---\n\nYeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node - lets you quickly set up a project following best practices.\n\nBuilt on:\n![Build Status](https://codeship.com/projects/26128390-800a-0133-c5f7-6a23b0487a18/status?branch=master)\n[![npm version](https://badge.fury.io/js/generator-angular-fullstack.svg)](http://badge.fury.io/js/generator-angular-fullstack)\n[![Dependency Status](https://david-dm.org/angular-fullstack/generator-angular-fullstack.svg)](https://david-dm.org/angular-fullstack/generator-angular-fullstack)\n[![Dev-Dependency Status](https://david-dm.org/angular-fullstack/generator-angular-fullstack/dev-status.svg)](https://david-dm.org/angular-fullstack/generator-angular-fullstack#info=devDependencies)\n[![Gitter chat](https://badges.gitter.im/DaftMonk/generator-angular-fullstack.svg)](https://gitter.im/DaftMonk/generator-angular-fullstack) \n\n\n\n---\n\n## Welcome to Universal Javascript\n![](https://cdn-images-1.medium.com/max/1600/1*pkA5znpcqqmIwZRXesioGA.png)\nJavascript that can run both in the client (browser) and server (ie - [Node.js](https://nodejs.org/)) is here...[read more about it here](https://medium.com/@mjackson/universal-javascript-4761051b7ae9).\n\n### FullStack Generator\nThis `yeoman` universal javascript application stack generator features [Angular](https://angular.io/), [Express](http://expressjs.com), [Node](https://nodejs.org/en/), [Mongo](https://www.mongodb.org/), [Socket](http://socket.io/), and more.\n\nHere are some of the main capabilities:\n\n* Angular best practices ([`component`](http://www.johnpapa.net/angular-growth-structure/)/[`feature`](http://www.johnpapa.net/angular-growth-structure/) folder structure)\n* SASS AND LESS enabled\n* [`jshint`](http://jshint.com/), [`jscsc`](http://jscs.info/), [`eslint`](http://eslint.org/) enabled for better quality code\n* [Karma](https://karma-runner.github.io/) configured with [Code Coverage](https://karma-runner.github.io/0.8/config/coverage.html)\n* [Protractor](http://www.protractortest.org/) E2E Angular testing\n* [Browser-sync](https://www.browsersync.io/) for synchronised browser testing\n* Continuous integration with [Travic CI](https://travis-ci.org/giftstarter/generator-makeme)\n* [TestFairy](http://testfairy.com/) publishing for mobile testing\n* [ES6](http://www.es6js.com/)/[7](https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_7_support_in_Mozilla) supported by using [`the babel`](https://babeljs.io/)\n\n---\n\n> **NOTE:**   \n> This uses [generator-fullstack-deps](https://github.com/angular-fullstack/angular-fullstack-deps) to scaffold common dependencies\n\n## Setting up\nIn order to get the best experience, you have to install a couple of global npm packages, like Gulp, Yemoan, and more. \n\n### Prerequisites\n\n- [Git](https://git-scm.com/)\n- [Node.js and npm](nodejs.org) Node ^4.2.3, npm ^2.14.7\n- [Bower](bower.io) (`npm install --global bower`)\n- [Gulp](http://gulpjs.com/) (`npm install --global gulp`)\n- [MongoDB](https://www.mongodb.org/) - Keep a running daemon with `mongod`\n\n\n### Auto install\nExecute the following command:\n\n```\n$ npm install -g yo gulp bower makeme\n```\n\n\nThis will install, among others, the following packages globally:\n\n* gulp\n* yeoman\n* bower\n* makeme generator\n\n\n#### A few things to note:\n\n1. If you have issues (like `$ yo: command not found`) - first run `npm install -g yo` & `npm install --global gulp`\n2. If you have existing project modify the name of the generator in your `.yo-rc.json` file \n3. If you need to update Node, do this:\n  1. `npm cache clean -f`\n  2. Install [nvm](https://github.com/creationix/nvm#install-script)\n  3. `nvm install 4.2.4`\n  4. `nvm alias default 4.2.4`\n  5. `nvm use 4.2.4`\n\n---\n\n## Supported Configurations\n\n**General**\n\n* Build Systems: `Grunt`, `Gulp` \n* Testing: \n  * `Jasmine`\n  * `Mocha + Chai + Sinon`\n    * Chai assertions:\n      * `Expect`\n      * `Should`\n\n**Client**\n\n* Scripts: `Babel`, `TypeScript` (Coming Soon)\n* Markup:  `HTML`, `Jade`\n* Stylesheets: `CSS`, `Stylus`, `Sass`, `Less`\n* Angular Routers: `ngRoute`, `ui-router`\n* CSS Frameworks: `Material`, `Bootstrap`\n  * Option to include `UI Bootstrap`\n\n**Server**\n\n* Scripts: `Babel`\n* Database:\n  * `None`,\n  * `MongoDB`, `SQL`\n    * Authentication boilerplate: `Yes`, `No`\n    * oAuth integrations: `Facebook` `Twitter` `Google`\n    * Socket.io integration: `Yes`, `No`\n\n### Configuration\nThe generated projects can be further tweaked according to your needs by modifying project files appropriately.\n\nAn editable `.yo-rc` file is generated for helping to copy configurations across projects, and to allow you to keep track of settings.\n\n\n## Project Structure\n\n#### Base structure\n\n    ├── client\n    │   ├── app                 - All app specific components go in here\n    │   ├── assets              - Custom assets: fonts, images, etc…\n    │   ├── components          - Reusable components, non-specific to this app\n    │\n    ├── e2e                     - Protractor end to end tests\n    │\n    └── server\n        ├── api                 - Local server api\n        ├── auth                - For handling authentication with different auth strategies\n        ├── components          - Reusable or app-wide components\n        ├── config              - App configurations\n        │   └── local.env.js    - Keep environment variables out of source control\n        │   └── environment     - Configuration specific to the node environment\n        └── views               - Server rendered views\n\n#### An example client component in `client/app`\n\n    main\n    ├── main.js                 - Routes\n    ├── main.controller.js      - Controller for our main route\n    ├── main.controller.spec.js - Test\n    ├── main.html               - View\n    └── main.less               - Styles\n\n#### An example server component in `server/api`\n\n    thing\n    ├── index.js                - Routes\n    ├── thing.controller.js     - Controller for our `thing` endpoint\n    ├── thing.model.js          - Database model\n    ├── thing.socket.js         - Register socket events\n    └── thing.spec.js           - Test\n\n### Environment Variables\n\nKeeping the app secrets and other sensitive information in source control isn\'t a good idea. To have `gulp` (or `grunt`) launch the app with specific environment variables, add them to the git ignored environment config file: `server/config/local.env.js`.\n\n### Injection\n\nA `gulp` task looks for new files in your `client/app` and `client/components` folder and automatically injects them in the appropriate places based on an injection block.\n\n* `less` files into `client/app/app.less`\n* `scss` files into `client/app/app.scss`\n* `stylus` files into `client/app/app.styl`\n* `css` files into `client/index.html`\n* `js` files into `client/index.html`\n* `babel` temp `js` files into `client/index.html`\n\n\n\n## Typical workflows\nThese are all available in the already provided apps, or inside any new apps you build.\n\n\n1. **Develop with existing code**\n - `$ gulp serve` to start the app in `watch` mode\n - Do some `coding` that is amazing\n - `$ gulp test` to run the client & server unit tests with `karma` and `mocha`\n - View changes in a ***c9*** tab or new browser tab \n     - Click the `Preview` button in the top menu\n     - Or, go to https://gs-web-username.c9.io\n - `$ gulp` to build the `client` app into the **`dist`** folder\n - `$ gulp buildcontrol:heroku` to push changes to Heroku server\n2. **Develop a new component (module, controller, factory, etc)**\n - `$ yo makeme:route newModuleName`\n - `$ yo makeme:controller newControllerName`\n - [?] Where would you like to create this controller? `client/app/newModuleName`\n - `$ gulp serve` to start the app in `watch` mode\n - Do some `coding` that is amazing\n - `$ gulp test` to run the client & server unit tests with `karma` and `mocha`\n - View changes in a ***c9*** tab or new browser tab \n     - Click the `Preview` button in the top menu\n     - Or, go to https://gs-web-username.c9.io\n - `$ gulp` to build the `client` app into the **`dist`** folder\n - `$ gulp buildcontrol:heroku` to push changes to Heroku server\n\n\n\n#### - To see more, check out the [Generator docs](./docs/generators.md).\n\n\n\n## Gulp tasks\nHere is a set of simple gulp tasks available:\n```\ngulp                # Build the app\ngulp serve          # Load the app in preview mode\ngulp serve:debug\t# Load a more debugging-friendly environment\ngulp dist           # Distribute the application\n------\ngulp help           # List the main gulp tasks\ngulp lint           # Run lint\ngulp test           # Run lint, unit tests, and e2e tests\ngulp unit           # Run lint and unit tests (karma for client + mocha for server)\ngulp karma          # Run karma client unit tests\ngulp mocha          # Run mocha server unit tests\ngulp e2e            # Run protractor for end to end tests\ngulp style          # Generate a main.css file\n```\n\n\n\n## Running the server\nHere are the main ways of running the app, which includes both an Express server, MongoDB server, and an Angular client app.\n\n1. Open `server/index.js` and start the app by clicking on the `Run` button in the top menu.\n2. Alternatively you can launch the app from the `Terminal`:\n\n    - `$ gulp serve` to preview\n    - `$ gulp serve:dist` to preview the built app\n    - `$ gulp serve:debug` to run the app in debug mode\n    - `$ node server/index` to run the production version of the app\n    \nOnce the server is running, open the project in the shape of `https://projectname-username.c9.io:3001`\n\n## Bower Components\n\nThe following packages are always installed by the [app](#app) generator:\n\n* angular\n* angular-cookies\n* angular-mocks\n* angular-resource\n* angular-sanitize\n* es5-shim\n* font-awesome\n* json3\n* jquery\n* lodash\n\nThese packages are installed optionally depending on your configuration:\n\n* angular-route\n* angular-ui-router\n* angular-socket-io\n* angular-bootstrap\n* angular-material\n* angular-famous\n* bootstrap\n\nAll of these can be updated with `bower update` as new versions are released.\n\n### Adding Bower packages\nYou should always prefer an `npm` package instead of a `bower` package. Most of client side libraries nowadays exist as both npm and bower packages. But sometimes it is not the case and you have to deal with a bower package. Here\'s how to do it elegantly.\n\nTo include a third party `bower` package do the following:\n\n* `bower install --save thepackage`\n* modify `package.json` `browser` section to include a path to the global minified javascript file of the package\n* if the package exposes a global `.scss` file import it into `client/styles/main.scss` and ajdust eventually the variable for the path font (should be `../fonts`)\n* if the package only exposes a `.css` file adjust the **css** file constants (`gulp/common/constants.js`) to include it\n* if the package relies on other libraries\n  * Either add a browser-shim section \n  * Or make sure to require the dependencies in the code just before you `require` the package.\n  * \n## Changelog\n\nRecent changes can be viewed on Github on the [Releases Page](https://github.com/giftstarter/makeme/releases)\n\n\n## Upgrade\nHere is the core generator upgrade process.\n\n**1:**\n```bash\nnpm update -g generator-makeme\n```\n**2:**\n```bash\ngit pull github master\n```\nfrom [makeme](https://github.com/giftstarter/makeme)\n\n## Contribute\n\nSee the [contributing docs](https://github.com/giftstarter/generator-makeme/blob/master/contributing.md)\n\nThis project has 2 main branches: `master` and `canary`. The `master` branch is where the current stable code lives and should be used for production setups. The `canary` branch is the main development branch, this is where PRs should be submitted to (backport fixes may be applied to `master`).\n\nBy separating the current stable code from the cutting-edge development we hope to provide a stable and efficient workflow for users and developers alike.\n\nWhen submitting an issue, please follow the [guidelines](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission). Especially important is to make sure Yeoman is up-to-date, and providing the command or commands that cause the issue.\n\nWhen submitting a PR, make sure that the commit messages match the [AngularJS conventions](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/).\n\nWhen submitting a bugfix, try to write a test that exposes the bug and fails before applying your fix. Submit the test alongside the fix.\n\nWhen submitting a new feature, add tests that cover the feature.\n\nSee the `travis.yml` for configuration required to run tests.\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php) from [angular-fullstack](https://github.com/angular-fullstack/generator-angular-fullstack/blob/master/readme.md#license)',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'd0257488eee9ff50ddaf4ae3ae9b6edb142ebdcd',
18 silly publish   _id: 'generator-makeme@3.2.8',
18 silly publish   _shasum: 'a5ce169c61d081aee285dd2065cb0bbb3af44566',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name generator-makeme
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/generator-makeme
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /home/ubuntu/.npm/generator-makeme/3.2.8/package.tgz
26 verbose request uri https://registry.npmjs.org/generator-makeme
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 8:52:53 PM
29 verbose request using bearer token for auth
30 verbose request id 66b5fa8d44a038d3
31 http request PUT https://registry.npmjs.org/generator-makeme
32 http 403 https://registry.npmjs.org/generator-makeme
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Thu, 07 Jan 2016 20:52:54 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-atl6225-ATL',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1452199973.664529,VS0,VE1154' }
34 verbose request invalidating /home/ubuntu/.npm/registry.npmjs.org/generator-makeme on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 3.2.8." : generator-makeme
36 verbose stack     at makeError (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/home/ubuntu/.nvm/versions/node/v4.2.4/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid generator-makeme
39 verbose cwd /home/ubuntu/workspace/makeme
40 error Linux 4.2.0-c9
41 error argv "/home/ubuntu/.nvm/versions/node/v4.2.4/bin/node" "/home/ubuntu/.nvm/versions/node/v4.2.4/bin/npm" "publish"
42 error node v4.2.4
43 error npm  v3.5.2
44 error code E403
45 error "You cannot publish over the previously published version 3.2.8." : generator-makeme
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
